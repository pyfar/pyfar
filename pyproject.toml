[project]
name = "pyfar"
version = "0.7.0"
description = "Project for data formats in acoustics."
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.9"
authors = [
    { name = "The pyfar developers", email = "info@pyfar.org" },
]
keywords = [
    "pyfar",
    "acoustics",
    "Fourier transforms",
    "audio signal processing",
    "filterbanks",
    "parametric filters",
    "audio signal visualization",
    "read and write audio signals",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "numpy>=1.23.0",
    "scipy>=1.5.0",
    "matplotlib",
    "sofar>=0.1.2",
    "urllib3",
    "deepdiff",
    "soundfile>=0.11.0",
]

[project.optional-dependencies]
deploy = [
    "twine",
    "wheel",
    "build",
    "setuptools",
    "bump-my-version",
    ]
tests = [
    "pytest",
    "pytest-cov",
    "watchdog",
    "ruff==0.4.1",
    "coverage",
]
docs = [
    "sphinx<8",
    "autodocsumm",
    "pydata-sphinx-theme",
    "sphinx_mdinclude",
    "sphinx-design",
    "sphinx-favicon",
    "sphinx-reredirects",
]
dev = ["pyfar[deploy,tests,docs]"]

[project.urls]
Tracker = "https://github.com/pyfar/pyfar/issues"
Documentation = "https://pyfar.readthedocs.io/"
Download = "https://pypi.org/project/pyfar/"
Homepage = "https://pyfar.org/"
Source = "https://github.com/pyfar/pyfar"
Changelog = "https://github.com/pyfar/pyfar/blob/main/HISTORY.rst"

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages]
find = {}  # Scan the project directory with the default parameters

[tool.ruff]
exclude = [
    ".git",
    "docs",
    "setup.py",
    "pyfar/dsp/filter/_audiofilter.py",
    "pyfar/samplings/external",
]
line-length = 79
lint.ignore = []
lint.select = [
    "ARG",
    "C4",
    "E",
    "F",
    "W",
    "A",
    "ERA",
    "NPY",
    "COM",
    "I002",
    "TID252",
    "FIX",
]

[tool.bumpversion]
current_version = "0.7.0"
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)"
serialize = ["{major}.{minor}.{patch}"]
search = "{current_version}"
replace = "{new_version}"
regex = true
ignore_missing_version = false
ignore_missing_files = false
tag = true
sign_tags = false
tag_name = "v{new_version}"
tag_message = "Bump version: {current_version} → {new_version}"
allow_dirty = false
commit = true
message = "Bump version: {current_version} → {new_version}"
commit_args = ""
setup_hooks = []
pre_commit_hooks = []
post_commit_hooks = []

[[tool.bumpversion.files]]
filename = "pyproject.toml"
search = '\nversion = "{current_version}"'
replace = '\nversion = "{new_version}"'

[[tool.bumpversion.files]]
filename = "pyfar/__init__.py"
search = "__version__ = '{current_version}'"
replace = "__version__ = '{new_version}'"
